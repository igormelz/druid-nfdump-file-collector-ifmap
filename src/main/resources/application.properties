# Quarkus
quarkus.log.file.enable = false
quarkus.log.level=INFO

# Camel
camel.context.name = nfdump-druid-collector

#
# collector parameters
#
## parsed columns for nfdump pipe format 
collector.parser.spec= %skip,first,%skip,last,%skip,proto,%skip,%skip,%skip,srcip,srcport,%skip,%skip,%skip,dstip,dstport,srcas,dstas,in,out,%skip,%skip,%skip,bytes
## output columns
collector.output.spec= last,customer,vlan,direction,uplink,proto,local_ip,local_port,asn,remote_ip,remote_port,bytes
## src host and path to nfdump files
#collector.source=
## dest host and path to result file 
#collector.destination=
## ssh-key 
# collector.sshKeyFile=
## exec command
#collector.nfdumpCmd=nfdump
## exec args
#collector.nfdumpArgs=
## druid url
#collector.druidUrl=http://localhost:8081

## simple map ifindex to peer 
simplemap.uplink= 562,CLOUD-IX,571,RETN,691,ROSTEL,690,BEELINE,689,RUNNET,688,RETN

## simple map proto to protocol 
simplemap.protocol= 1,icmp,4,ipv4,6,tcp,17,udp,41,ipv6,47,gre,50,esp   

# define lookup table for mapping ipaddr to customer
customer.mapFileUrl= file:config/ip.dat
# pattern format: ipnet\tcustomer\tvlanId\tstatus<eol>
customer.pattern= (.*)\\t(.*)\\t(.*)\\t(.*)[\\r\\n]*
# key fields: ipnet
customer.keyColumnIndex= 1
# data fields: customer,vlan
customer.dataColumnIndex= 2,3
# use message body
customer.useHeaders= false
# message fields to lookup 
customer.mapKeys= local_ip
# return field name
customer.mapValues= customer,vlan
# set default values if not found 
customer.valueDefaults= NaN,NaN
# 15 min reload
customer.reloadInterval= 1800
